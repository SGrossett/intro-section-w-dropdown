[{"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/index.js":"1","/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/App.js":"2","/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/components/Navbar/index.js":"3"},{"size":233,"mtime":1650943019314,"results":"4","hashOfConfig":"5"},{"size":143,"mtime":1650984017742,"results":"6","hashOfConfig":"5"},{"size":4178,"mtime":1651087547938,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1h17qpj",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/index.js",[],[],[],"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/App.js",[],[],[],"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/components/Navbar/index.js",["20","21","22","23","24"],[],"import { Menu, Transition } from '@headlessui/react';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { useState, Fragment } from 'react'\nimport { Popover } from '@headlessui/react'\nimport { usePopper } from 'react-popper';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/navbar.css';\n\nimport arrowDown from '../../images/icon-arrow-down.svg';\nimport arrowUp from '../../images/icon-arrow-up.svg';\nimport todo from '../../images/icon-todo.svg';\nimport calendar from '../../images/icon-calendar.svg';\nimport reminders from '../../images/icon-reminders.svg';\nimport planning from '../../images/icon-planning.svg';\n\n\n\nfunction IntroNav() {\n  let [referenceElement, setReferenceElement] = useState()\n  let [popperElement, setPopperElement] = useState()\n  let { styles, attributes } = usePopper(referenceElement, popperElement)\n\n  // <Popover.Button>\n  //                 <span>Solutions\n  //                   <span>\n  //                     { open ? (<img src={arrowUp} />) : (<img src={arrowDown} /> )}\n  //                   </span>\n  //                 </span>\n                  \n  //               </Popover.Button>\n  return (\n    <div>\n      <Navbar bg='info'>\n        <Navbar.Brand>snap</Navbar.Brand>\n        <Nav>\n          <Nav.Link href='#'>\n          <Popover className=\"position-relative\">\n        {({ open }) => (\n          <>\n             <Popover.Button className='dropdown-link'>\n                <span>Features\n                  <span  className='ml-05'>\n                    { open ? (<img src={arrowUp} />) : (<img src={arrowDown} /> )}\n                  </span>\n                </span>\n                \n              </Popover.Button>\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel \n                ref={setPopperElement}\n                style={styles.popper}\n                {...attributes.popper}\n                className=\"postion-absolut\"\n              >                \n                <div className=\"dropdown dropdown-menu show\">\n                  <div>\n                    {solutions.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className=\"d-flex align-items-center dropdown-item\"\n                      >\n                        <div className=\"d-flex items-center justify-content-center\">\n                          <img\n                            src={item.icon}\n                            aria-hidden=\"true\" \n                          />\n                        </div>\n                        <div className=\"ml-075\">\n                            {item.name}\n                        </div>\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </>\n        )}\n      </Popover>\n          </Nav.Link>\n          <Nav.Link href='#'>Company</Nav.Link>\n          <Nav.Link href='#'>Careers</Nav.Link>\n          <Nav.Link href='#'>About</Nav.Link>\n          <Nav.Link href='#'>Login</Nav.Link>\n          <Nav.Link href='#'>Register</Nav.Link>\n        </Nav>\n      </Navbar>\n\n      <p>Testing testing</p>\n      <Navbar>\n        <Nav>\n          <NavDropdown title=\"proucts\">\n            <NavDropdown.Item href=\"#\">Tea</NavDropdown.Item>\n            <NavDropdown.Item href=\"#\">Coffee</NavDropdown.Item>\n            <NavDropdown.Item href=\"#\">Juice</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar>\n       \n    </div>\n  )\n}\n\nexport default IntroNav;\n\nconst solutions = [\n  {\n    name: 'Todo List',\n    href: '##',\n    icon: todo,\n  },\n  {\n    name: 'Calendar',\n    href: '##',\n    icon: calendar,\n  },\n  {\n    name: 'Reminders',\n    href: '##',\n    icon: reminders,\n  },\n  {\n    name: 'Planning',\n    href: '##',\n    icon: planning,\n  },\n]\n",{"ruleId":"25","severity":1,"message":"26","line":1,"column":10,"nodeType":"27","messageId":"28","endLine":1,"endColumn":14},{"ruleId":"25","severity":1,"message":"29","line":20,"column":26,"nodeType":"27","messageId":"28","endLine":20,"endColumn":45},{"ruleId":"30","severity":1,"message":"31","line":44,"column":31,"nodeType":"32","endLine":44,"endColumn":52},{"ruleId":"30","severity":1,"message":"31","line":44,"column":57,"nodeType":"32","endLine":44,"endColumn":80},{"ruleId":"30","severity":1,"message":"31","line":73,"column":27,"nodeType":"32","endLine":76,"endColumn":29},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'setReferenceElement' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]