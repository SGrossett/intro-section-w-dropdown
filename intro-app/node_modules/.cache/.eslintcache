[{"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/index.js":"1","/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/App.js":"2","/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/components/Navbar/index.js":"3"},{"size":233,"mtime":1650943019314,"results":"4","hashOfConfig":"5"},{"size":143,"mtime":1650984017742,"results":"6","hashOfConfig":"5"},{"size":6273,"mtime":1651088710386,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1h17qpj",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/index.js",[],[],[],"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/App.js",[],[],[],"/Users/owner/Documents /Frontend Mentor/intro-section-w-dropdown/intro-app/src/components/Navbar/index.js",["20","21","22","23","24","25","26"],[],"import { Menu, Transition } from '@headlessui/react';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { useState, Fragment } from 'react'\nimport { Popover } from '@headlessui/react'\nimport { usePopper } from 'react-popper';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/navbar.css';\n\nimport arrowDown from '../../images/icon-arrow-down.svg';\nimport arrowUp from '../../images/icon-arrow-up.svg';\nimport todo from '../../images/icon-todo.svg';\nimport calendar from '../../images/icon-calendar.svg';\nimport reminders from '../../images/icon-reminders.svg';\nimport planning from '../../images/icon-planning.svg';\n\n\n\nfunction IntroNav() {\n  let [referenceElement, setReferenceElement] = useState()\n  let [popperElement, setPopperElement] = useState()\n  let { styles, attributes } = usePopper(referenceElement, popperElement)\n\n  return (\n    <div>\n      <Navbar bg='info'>\n        <Navbar.Brand>snap</Navbar.Brand>\n        <Nav>\n          <Nav.Link href='#'>\n            <Popover className=\"position-relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button className='dropdown-link headless-link'>\n                    <span>Features\n                      <span  className='ml-05'>\n                        { open ? (<img src={arrowUp} />) : (<img src={arrowDown} /> )}\n                      </span>\n                    </span>\n                    \n                  </Popover.Button>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel \n                      ref={setPopperElement}\n                      style={styles.popper}\n                      {...attributes.popper}\n                      className=\"postion-absolut\"\n                    >                \n                      <div className=\"dropdown dropdown-menu show\">\n                        <div>\n                          {features.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"d-flex align-items-center dropdown-item\"\n                            >\n                              <div className=\"d-flex items-center justify-content-center\">\n                                <img\n                                  src={item.icon}\n                                  aria-hidden=\"true\" \n                                />\n                              </div>\n                              <div className=\"ml-075\">\n                                  {item.name}\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Nav.Link>\n          <Nav.Link href='#'>\n            <Popover className=\"position-relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button className='dropdown-link headless-link'>\n                    <span>Company\n                      <span  className='ml-05'>\n                        { open ? (<img src={arrowUp} />) : (<img src={arrowDown} /> )}\n                      </span>\n                    </span>\n                    \n                  </Popover.Button>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel \n                      ref={setPopperElement}\n                      style={styles.popper}\n                      {...attributes.popper}\n                      className=\"postion-absolut\"\n                    >                \n                      <div className=\"dropdown dropdown-menu show\">\n                        <div>\n                          {company.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"d-flex align-items-center dropdown-item\"\n                            >\n                              <div className=\"ml-075\">\n                                  {item.name}\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Nav.Link>\n          <Nav.Link href='#'>Careers</Nav.Link>\n          <Nav.Link href='#'>About</Nav.Link>\n          <Nav.Link href='#'>Login</Nav.Link>\n          <Nav.Link href='#'>Register</Nav.Link>\n        </Nav>\n      </Navbar>\n\n      <p>Testing testing</p>\n      <Navbar>\n        <Nav>\n          <NavDropdown title=\"proucts\">\n            <NavDropdown.Item href=\"#\">Tea</NavDropdown.Item>\n            <NavDropdown.Item href=\"#\">Coffee</NavDropdown.Item>\n            <NavDropdown.Item href=\"#\">Juice</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar>\n       \n    </div>\n  )\n}\n\nexport default IntroNav;\n\nconst features = [\n  {\n    name: 'Todo List',\n    href: '##',\n    icon: todo,\n  },\n  {\n    name: 'Calendar',\n    href: '##',\n    icon: calendar,\n  },\n  {\n    name: 'Reminders',\n    href: '##',\n    icon: reminders,\n  },\n  {\n    name: 'Planning',\n    href: '##',\n    icon: planning,\n  },\n]\n\nconst company = [\n  {\n    name: 'History',\n    href: '##',\n  },\n  {\n    name: 'Our Team',\n    href: '##',\n  },\n  {\n    name: 'Blog',\n    href: '##',\n  }\n]\n",{"ruleId":"27","severity":1,"message":"28","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":14},{"ruleId":"27","severity":1,"message":"31","line":20,"column":26,"nodeType":"29","messageId":"30","endLine":20,"endColumn":45},{"ruleId":"32","severity":1,"message":"33","line":36,"column":35,"nodeType":"34","endLine":36,"endColumn":56},{"ruleId":"32","severity":1,"message":"33","line":36,"column":61,"nodeType":"34","endLine":36,"endColumn":84},{"ruleId":"32","severity":1,"message":"33","line":65,"column":33,"nodeType":"34","endLine":68,"endColumn":35},{"ruleId":"32","severity":1,"message":"33","line":90,"column":35,"nodeType":"34","endLine":90,"endColumn":56},{"ruleId":"32","severity":1,"message":"33","line":90,"column":61,"nodeType":"34","endLine":90,"endColumn":84},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'setReferenceElement' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]